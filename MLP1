### **MULTİ REGRESYON 1**

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
%matplotlib inline


from sklearn import metrics
from sklearn.metrics import mean_squared_error, mean_absolute_error
from sklearn.model_selection import train_test_split, cross_val_score

from google.colab import files
uploaded = files.upload()

veriler = pd.read_csv("emlak_fiyat_boyut_metro.csv")
veriler.head()

veriler.isnull().sum()           # BOŞ VERİ OLUP OLMADIĞINI KONTROL EDİYORUZ

veriler.corr()

plt.figure(figsize=(6, 6))
heatmap = sns.heatmap(veriler.corr(), vmin=-1, vmax=1, annot=True)
heatmap.set_title('Correlation Heatmap', fontdict={'fontsize':12}, pad=12);


x = veriler[["boyut","metro_yakinlik"]].values
y = veriler["fiyat"].values.reshape(-1,1)

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x, y, test_size=0.33, random_state=42)

from sklearn import linear_model
from sklearn.linear_model import LinearRegression

model = LinearRegression()
model.fit(x_train,y_train)              # UYDUR DİYORUZ
y_pred = model.predict(x_test)

plt.scatter(x_train,y_train, color = 'red')
plt.plot(x_train, model.predict(x_train), color = 'blue')
plt.title('Başın Çevre Uzunluğu ve Beyin Ağırlığı (Eğitim Veri Seti)')
plt.xlabel('Başın Çevre Uzunluğu (cm^3)')
plt.ylabel('Beyin Ağırlığı(gram)')
plt.show()

plt.scatter(x_test, y_test, color = 'green')
plt.plot(x_test,model.predict(x_test), color = 'blue')
plt.title('Başın Çevre Uzunluğu ve Beyin Ağırlığı (Test Veri Seti)')
plt.xlabel('Başın Çevre Uzunluğu (cm^3)')
plt.ylabel('Beyin Ağırlığı(gram)')
plt.show()

from sklearn.metrics import explained_variance_score, mean_absolute_error, mean_squared_error
from sklearn.metrics import median_absolute_error, r2_score

print("R-Kare: ", r2_score(y_test, y_pred))
print("MAE: ", mean_absolute_error(y_test, y_pred))
print("MSE: ", mean_squared_error(y_test, y_pred))
print("MedAE: ", median_absolute_error(y_test, y_pred))
print("EVS: ", explained_variance_score(y_test, y_pred))
